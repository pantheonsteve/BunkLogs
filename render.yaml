services:
  - type: web
    name: bunklogs-backend
    runtime: python3
    buildCommand: "./build.sh"
    startCommand: "gunicorn --config gunicorn.conf.py config.wsgi:application"
    healthCheckPath: "/health/"
    envVars:
      - key: PYTHON_VERSION
        value: "3.11.4"
      - key: WEB_CONCURRENCY
        value: "1"  # Use single worker for bulk operations
      - key: DJANGO_SETTINGS_MODULE
        value: "config.settings.production"
      - key: DJANGO_SECRET_KEY
        fromSecret: DJANGO_SECRET_KEY
      - key: DATABASE_URL
        fromDatabase:
          name: bunklogs-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: bunklogs-redis
          property: connectionString
      # Mailgun settings for email service
      - key: MAILGUN_API_KEY
        fromSecret: MAILGUN_API_KEY
      - key: MAILGUN_DOMAIN
        fromSecret: MAILGUN_DOMAIN
      - key: MAILGUN_FROM_EMAIL
        fromSecret: MAILGUN_FROM_EMAIL

  # Cron job for daily email reports
  - type: cron
    name: daily-reports
    runtime: python3
    buildCommand: "./build.sh"
    startCommand: "python manage.py send_daily_reports"
    schedule: "0 8 * * *"  # Daily at 8 AM
    envVars:
      - key: PYTHON_VERSION
        value: "3.11.4"
      - key: DJANGO_SETTINGS_MODULE
        value: "config.settings.production"
      - key: DJANGO_SECRET_KEY
        fromSecret: DJANGO_SECRET_KEY
      - key: DATABASE_URL
        fromDatabase:
          name: bunklogs-db
          property: connectionString
      - key: MAILGUN_API_KEY
        fromSecret: MAILGUN_API_KEY
      - key: MAILGUN_DOMAIN
        fromSecret: MAILGUN_DOMAIN
      - key: MAILGUN_FROM_EMAIL
        fromSecret: MAILGUN_FROM_EMAIL

databases:
  - name: bunklogs-db
    plan: starter  # or higher plan as needed

services:
  - type: redis
    name: bunklogs-redis
    plan: starter  # for caching and sessions
