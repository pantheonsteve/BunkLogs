# Dockerfile optimized for Elastic Beanstalk deployment
FROM python:3.12.9-slim-bookworm

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Set work directory
WORKDIR /app

# Install system dependencies with minimal packages for faster build
RUN apt-get update && apt-get install --no-install-recommends -y \
    libpq-dev \
    gettext \
    gcc \
    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY requirements/production.txt /app/requirements.txt

# Install Python dependencies with timeout and better error handling
RUN pip install --no-cache-dir --timeout=1000 -r requirements.txt

# Copy application code
COPY . /app/

# Create necessary directories
RUN mkdir -p /app/staticfiles /app/media

# Set minimal environment for Django commands to prevent database connection attempts
ENV DJANGO_SECRET_KEY="temp-build-key"
ENV DATABASE_URL="sqlite:///:memory:"
ENV DJANGO_SETTINGS_MODULE="config.settings.production"
ENV DJANGO_DEBUG="False"
ENV DJANGO_ALLOWED_HOSTS="localhost"

# Collect static files with error handling
RUN python manage.py collectstatic --noinput --clear || echo "Static collection failed, continuing..."

# Compile translation messages with error handling  
RUN python manage.py compilemessages || echo "Translation compilation failed, continuing..."

# Expose port 8000
EXPOSE 8000

# Start the application with better configuration for EB
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "2", "--worker-class", "sync", "--timeout", "60", "--keep-alive", "2", "--max-requests", "1000", "--max-requests-jitter", "100", "config.wsgi:application"]
