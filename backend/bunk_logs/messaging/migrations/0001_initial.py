# Generated by Django 5.0.13 on 2025-07-15 20:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EmailRecipientGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_test_data', models.BooleanField(default=False, help_text='Mark this record as test/dummy data. Test data can be easily identified and deleted in bulk.', verbose_name='Is Test Data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Email Recipient Group',
                'verbose_name_plural': 'Email Recipient Groups',
                'db_table': 'bunk_logs_messaging_emailrecipientgroup',
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_test_data', models.BooleanField(default=False, help_text='Mark this record as test/dummy data. Test data can be easily identified and deleted in bulk.', verbose_name='Is Test Data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('subject_template', models.CharField(max_length=200)),
                ('html_template', models.TextField()),
                ('text_template', models.TextField()),
                ('description', models.TextField(blank=True, help_text='Description of what this template is used for')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
                'db_table': 'bunk_logs_messaging_emailtemplate',
            },
        ),
        migrations.CreateModel(
            name='EmailSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_test_data', models.BooleanField(default=False, help_text='Mark this record as test/dummy data. Test data can be easily identified and deleted in bulk.', verbose_name='Is Test Data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('cron_expression', models.CharField(help_text="Cron expression for scheduling (e.g., '0 8 * * *' for daily at 8 AM)", max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('last_sent', models.DateTimeField(blank=True, null=True)),
                ('recipient_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='messaging.emailrecipientgroup')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='messaging.emailtemplate')),
            ],
            options={
                'verbose_name': 'Email Schedule',
                'verbose_name_plural': 'Email Schedules',
                'db_table': 'bunk_logs_messaging_emailschedule',
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_test_data', models.BooleanField(default=False, help_text='Mark this record as test/dummy data. Test data can be easily identified and deleted in bulk.', verbose_name='Is Test Data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recipient_email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('success', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('mailgun_message_id', models.CharField(blank=True, max_length=200)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='messaging.emailtemplate')),
            ],
            options={
                'verbose_name': 'Email Log',
                'verbose_name_plural': 'Email Logs',
                'db_table': 'bunk_logs_messaging_emaillog',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_test_data', models.BooleanField(default=False, help_text='Mark this record as test/dummy data. Test data can be easily identified and deleted in bulk.', verbose_name='Is Test Data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='messaging.emailrecipientgroup')),
            ],
            options={
                'verbose_name': 'Email Recipient',
                'verbose_name_plural': 'Email Recipients',
                'db_table': 'bunk_logs_messaging_emailrecipient',
                'unique_together': {('email', 'group')},
            },
        ),
    ]
