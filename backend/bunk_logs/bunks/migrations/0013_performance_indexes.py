# Generated by Django 4.2.x on 2025-01-11 xx:xx

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bunks', '0012_remove_counselors_manytomany'),  # Replace with your latest migration
    ]

    operations = [
        # Add database indexes for performance optimization on CounselorBunkAssignment
        migrations.RunSQL(
            # Composite index for counselor and date range queries (most common)
            "CREATE INDEX IF NOT EXISTS idx_counselor_bunk_assignment_counselor_dates ON bunks_counselorbunkassignment(counselor_id, start_date, end_date);",
            reverse_sql="DROP INDEX IF EXISTS idx_counselor_bunk_assignment_counselor_dates;"
        ),
        migrations.RunSQL(
            # Index for bunk and date range queries 
            "CREATE INDEX IF NOT EXISTS idx_counselor_bunk_assignment_bunk_dates ON bunks_counselorbunkassignment(bunk_id, start_date, end_date);",
            reverse_sql="DROP INDEX IF EXISTS idx_counselor_bunk_assignment_bunk_dates;"
        ),
        migrations.RunSQL(
            # Index for primary counselor lookups
            "CREATE INDEX IF NOT EXISTS idx_counselor_bunk_assignment_primary ON bunks_counselorbunkassignment(bunk_id, is_primary, start_date) WHERE is_primary = true;",
            reverse_sql="DROP INDEX IF EXISTS idx_counselor_bunk_assignment_primary;"
        ),
        migrations.RunSQL(
            # Index for active assignments (end_date IS NULL or end_date >= current_date)
            "CREATE INDEX IF NOT EXISTS idx_counselor_bunk_assignment_active ON bunks_counselorbunkassignment(counselor_id, start_date) WHERE end_date IS NULL;",
            reverse_sql="DROP INDEX IF EXISTS idx_counselor_bunk_assignment_active;"
        ),
    ]
